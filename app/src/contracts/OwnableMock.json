{
  "contractName": "OwnableMock",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "isOwner",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[],\"name\":\"isOwner\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"isOwner()\":{\"return\":\"true if `msg.sender` is the owner of the contract.\"},\"owner()\":{\"return\":\"the address of the owner.\"},\"renounceOwnership()\":{\"details\":\"Allows the current owner to relinquish control of the contract. It will not be possible to call the functions with the `onlyOwner` modifier anymore.\"},\"transferOwnership(address)\":{\"details\":\"Allows the current owner to transfer control of the contract to a newOwner.\",\"params\":{\"newOwner\":\"The address to transfer ownership to.\"}}}},\"userdoc\":{\"methods\":{\"renounceOwnership()\":{\"notice\":\"Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"}}}},\"settings\":{\"compilationTarget\":{\"/home/grifma/Code/vi-admin-ui/contracts/lib/openzeppelin-solidity/contracts/mocks/OwnableMock.sol\":\"OwnableMock\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/home/grifma/Code/vi-admin-ui/contracts/lib/openzeppelin-solidity/contracts/mocks/OwnableMock.sol\":{\"keccak256\":\"0x3105fc7b0360fa0c1c71a6afe5f50bd006cb0677d523a29def7afdbe967edffd\",\"urls\":[\"bzz-raw://515e859093a3384450f2fa1982c34a1d00b2813f37c5704892776b41932532a7\",\"dweb:/ipfs/Qmbt6Y6hwtFTMQyS42feYUYmnNXqDT1EtdAUqNfmW2KTv9\"]},\"/home/grifma/Code/vi-admin-ui/contracts/lib/openzeppelin-solidity/contracts/ownership/Ownable.sol\":{\"keccak256\":\"0xb977d52e5d7a18ef5dc1ee510f05bac91bd1d45173936faba071369ab5794f26\",\"urls\":[\"bzz-raw://9491cf60f486c7f799d35a583ef1df7510e844f240bfa6d057c595ffff51a6d8\",\"dweb:/ipfs/Qme2AsfQs9NgKkMaRF1hmTh73w8KhRpfN1NqFaUkN4zgrj\"]}},\"version\":1}",
  "bytecode": "0x60806040819052600080546001600160a01b03191633178082556001600160a01b0316917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a36102e4806100576000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c8063715018a6146100515780638da5cb5b1461005b5780638f32d59b1461007f578063f2fde38b1461009b575b600080fd5b6100596100c1565b005b610063610164565b604080516001600160a01b039092168252519081900360200190f35b610087610173565b604080519115158252519081900360200190f35b610059600480360360208110156100b157600080fd5b50356001600160a01b0316610184565b6100c9610173565b61011a576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b031690565b6000546001600160a01b0316331490565b61018c610173565b6101dd576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b6101e6816101e9565b50565b6001600160a01b03811661022e5760405162461bcd60e51b815260040180806020018281038252602681526020018061028a6026913960400191505060405180910390fd5b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b039290921691909117905556fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373a265627a7a72315820ab3191e2c0aefbf9c71c8461cbe1950fcd7d7818a5b51dedabd9de326083355d64736f6c63430005100032",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061004c5760003560e01c8063715018a6146100515780638da5cb5b1461005b5780638f32d59b1461007f578063f2fde38b1461009b575b600080fd5b6100596100c1565b005b610063610164565b604080516001600160a01b039092168252519081900360200190f35b610087610173565b604080519115158252519081900360200190f35b610059600480360360208110156100b157600080fd5b50356001600160a01b0316610184565b6100c9610173565b61011a576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b031690565b6000546001600160a01b0316331490565b61018c610173565b6101dd576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b6101e6816101e9565b50565b6001600160a01b03811661022e5760405162461bcd60e51b815260040180806020018281038252602681526020018061028a6026913960400191505060405180910390fd5b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b039290921691909117905556fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373a265627a7a72315820ab3191e2c0aefbf9c71c8461cbe1950fcd7d7818a5b51dedabd9de326083355d64736f6c63430005100032",
  "sourceMap": "61:88:88:-;;;;;515:6:109;:19;;-1:-1:-1;;;;;;515:19:109;524:10;515:19;;;;-1:-1:-1;;;;;582:6:109;;549:40;;515:6;;549:40;61:88:88;;;;;;",
  "deployedSourceMap": "61:88:88:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;61:88:88;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1459:137:109;;;:::i;:::-;;659:77;;;:::i;:::-;;;;-1:-1:-1;;;;;659:77:109;;;;;;;;;;;;;;1015:90;;;:::i;:::-;;;;;;;;;;;;;;;;;;1767:107;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1767:107:109;-1:-1:-1;;;;;1767:107:109;;:::i;1459:137::-;863:9;:7;:9::i;:::-;855:54;;;;;-1:-1:-1;;;855:54:109;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1557:1;1541:6;;1520:40;;-1:-1:-1;;;;;1541:6:109;;;;1520:40;;1557:1;;1520:40;1587:1;1570:19;;-1:-1:-1;;;;;;1570:19:109;;;1459:137::o;659:77::-;697:7;723:6;-1:-1:-1;;;;;723:6:109;659:77;:::o;1015:90::-;1055:4;1092:6;-1:-1:-1;;;;;1092:6:109;1078:10;:20;;1015:90::o;1767:107::-;863:9;:7;:9::i;:::-;855:54;;;;;-1:-1:-1;;;855:54:109;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1839:28;1858:8;1839:18;:28::i;:::-;1767:107;:::o;2018:225::-;-1:-1:-1;;;;;2091:22:109;;2083:73;;;;-1:-1:-1;;;2083:73:109;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2192:6;;;2171:38;;-1:-1:-1;;;;;2171:38:109;;;;2192:6;;;2171:38;;;2219:6;:17;;-1:-1:-1;;;;;;2219:17:109;-1:-1:-1;;;;;2219:17:109;;;;;;;;;;2018:225::o",
  "source": "pragma solidity ^0.5.0;\n\nimport \"../ownership/Ownable.sol\";\n\ncontract OwnableMock is Ownable {\n    // solhint-disable-previous-line no-empty-blocks\n}\n",
  "sourcePath": "/home/grifma/Code/vi-admin-ui/contracts/lib/openzeppelin-solidity/contracts/mocks/OwnableMock.sol",
  "ast": {
    "absolutePath": "/home/grifma/Code/vi-admin-ui/contracts/lib/openzeppelin-solidity/contracts/mocks/OwnableMock.sol",
    "exportedSymbols": {
      "OwnableMock": [
        8645
      ]
    },
    "id": 8646,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 8641,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:88"
      },
      {
        "absolutePath": "/home/grifma/Code/vi-admin-ui/contracts/lib/openzeppelin-solidity/contracts/ownership/Ownable.sol",
        "file": "../ownership/Ownable.sol",
        "id": 8642,
        "nodeType": "ImportDirective",
        "scope": 8646,
        "sourceUnit": 9931,
        "src": "25:34:88",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 8643,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 9930,
              "src": "85:7:88",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$9930",
                "typeString": "contract Ownable"
              }
            },
            "id": 8644,
            "nodeType": "InheritanceSpecifier",
            "src": "85:7:88"
          }
        ],
        "contractDependencies": [
          9930
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 8645,
        "linearizedBaseContracts": [
          8645,
          9930
        ],
        "name": "OwnableMock",
        "nodeType": "ContractDefinition",
        "nodes": [],
        "scope": 8646,
        "src": "61:88:88"
      }
    ],
    "src": "0:150:88"
  },
  "legacyAST": {
    "absolutePath": "/home/grifma/Code/vi-admin-ui/contracts/lib/openzeppelin-solidity/contracts/mocks/OwnableMock.sol",
    "exportedSymbols": {
      "OwnableMock": [
        8645
      ]
    },
    "id": 8646,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 8641,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:88"
      },
      {
        "absolutePath": "/home/grifma/Code/vi-admin-ui/contracts/lib/openzeppelin-solidity/contracts/ownership/Ownable.sol",
        "file": "../ownership/Ownable.sol",
        "id": 8642,
        "nodeType": "ImportDirective",
        "scope": 8646,
        "sourceUnit": 9931,
        "src": "25:34:88",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 8643,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 9930,
              "src": "85:7:88",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$9930",
                "typeString": "contract Ownable"
              }
            },
            "id": 8644,
            "nodeType": "InheritanceSpecifier",
            "src": "85:7:88"
          }
        ],
        "contractDependencies": [
          9930
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 8645,
        "linearizedBaseContracts": [
          8645,
          9930
        ],
        "name": "OwnableMock",
        "nodeType": "ContractDefinition",
        "nodes": [],
        "scope": 8646,
        "src": "61:88:88"
      }
    ],
    "src": "0:150:88"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.16+commit.9c3226ce.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.23",
  "updatedAt": "2020-05-14T11:10:26.077Z",
  "devdoc": {
    "methods": {
      "isOwner()": {
        "return": "true if `msg.sender` is the owner of the contract."
      },
      "owner()": {
        "return": "the address of the owner."
      },
      "renounceOwnership()": {
        "details": "Allows the current owner to relinquish control of the contract. It will not be possible to call the functions with the `onlyOwner` modifier anymore."
      },
      "transferOwnership(address)": {
        "details": "Allows the current owner to transfer control of the contract to a newOwner.",
        "params": {
          "newOwner": "The address to transfer ownership to."
        }
      }
    }
  },
  "userdoc": {
    "methods": {
      "renounceOwnership()": {
        "notice": "Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      }
    }
  }
}