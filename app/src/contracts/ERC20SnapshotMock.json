{
  "contractName": "ERC20SnapshotMock",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "initialAccount",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "initialBalance",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "Snapshot",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "snapshotId",
          "type": "uint256"
        }
      ],
      "name": "balanceOfAt",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "snapshot",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "snapshotId",
          "type": "uint256"
        }
      ],
      "name": "totalSupplyAt",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"initialAccount\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"initialBalance\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"Snapshot\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"snapshotId\",\"type\":\"uint256\"}],\"name\":\"balanceOfAt\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"snapshot\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"snapshotId\",\"type\":\"uint256\"}],\"name\":\"totalSupplyAt\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"allowance(address,address)\":{\"details\":\"Function to check the amount of tokens that an owner allowed to a spender.\",\"params\":{\"owner\":\"address The address which owns the funds.\",\"spender\":\"address The address which will spend the funds.\"},\"return\":\"A uint256 specifying the amount of tokens still available for the spender.\"},\"approve(address,uint256)\":{\"details\":\"Approve the passed address to spend the specified amount of tokens on behalf of msg.sender. Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\",\"params\":{\"spender\":\"The address which will spend the funds.\",\"value\":\"The amount of tokens to be spent.\"}},\"balanceOf(address)\":{\"details\":\"Gets the balance of the specified address.\",\"params\":{\"owner\":\"The address to query the balance of.\"},\"return\":\"A uint256 representing the amount owned by the passed address.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Decrease the amount of tokens that an owner allowed to a spender. approve should be called when _allowed[msg.sender][spender] == 0. To decrement allowed value is better to use this function to avoid 2 calls (and wait until the first transaction is mined) From MonolithDAO Token.sol Emits an Approval event.\",\"params\":{\"spender\":\"The address which will spend the funds.\",\"subtractedValue\":\"The amount of tokens to decrease the allowance by.\"}},\"increaseAllowance(address,uint256)\":{\"details\":\"Increase the amount of tokens that an owner allowed to a spender. approve should be called when _allowed[msg.sender][spender] == 0. To increment allowed value is better to use this function to avoid 2 calls (and wait until the first transaction is mined) From MonolithDAO Token.sol Emits an Approval event.\",\"params\":{\"addedValue\":\"The amount of tokens to increase the allowance by.\",\"spender\":\"The address which will spend the funds.\"}},\"totalSupply()\":{\"details\":\"Total number of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Transfer token to a specified address.\",\"params\":{\"to\":\"The address to transfer to.\",\"value\":\"The amount to be transferred.\"}},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfer tokens from one address to another. Note that while this function emits an Approval event, this is not required as per the specification, and other compliant implementations may not emit the event.\",\"params\":{\"from\":\"address The address which you want to send tokens from\",\"to\":\"address The address which you want to transfer to\",\"value\":\"uint256 the amount of tokens to be transferred\"}}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/home/grifma/Code/vi-admin-ui/contracts/lib/openzeppelin-solidity/contracts/mocks/ERC20SnapshotMock.sol\":\"ERC20SnapshotMock\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/home/grifma/Code/vi-admin-ui/contracts/lib/openzeppelin-solidity/contracts/drafts/Counters.sol\":{\"keccak256\":\"0x5eb69360d3441ab2ee799bd7c007cccbffb0896f12b2dfe1456193e2aa180a11\",\"urls\":[\"bzz-raw://072e8b5a1b5acfc2acba9b6fb87d1dc57065aad44572617ad46b014074969eb3\",\"dweb:/ipfs/QmVTDHUriaxBJqiWCWgWC8vYaYYfXSz883LsowzTx1DcpK\"]},\"/home/grifma/Code/vi-admin-ui/contracts/lib/openzeppelin-solidity/contracts/drafts/ERC20Snapshot.sol\":{\"keccak256\":\"0x1bcae479d86294b0eb4c2659a34ff1ada60402b2d8876fb151d52e198385d295\",\"urls\":[\"bzz-raw://dff40161b78f644922e649f1b74ceabe9bcb4e08f5d52a285f5dce59780f8695\",\"dweb:/ipfs/QmQaTdqocNnP5FjhDJyj1qsnc9LqsgHn3LPLAGuCmkGYT3\"]},\"/home/grifma/Code/vi-admin-ui/contracts/lib/openzeppelin-solidity/contracts/math/Math.sol\":{\"keccak256\":\"0x9ab885deecf4505446e33202792c0ec9aa11b2e4ec840700433125188b4a8210\",\"urls\":[\"bzz-raw://70750b020beb515ce24d5dae4389de6ad37af9cc8172ecd693b64ef5a2e30b3b\",\"dweb:/ipfs/QmSbXA9T1oyK2KqnD8yRQCC8yVcpvxByF1JXyBQqxJwy1e\"]},\"/home/grifma/Code/vi-admin-ui/contracts/lib/openzeppelin-solidity/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x469f36041c0d8a5d24c63a99d84b245ef7114cad12311ae8c9ad367d65817efa\",\"urls\":[\"bzz-raw://4f9c678e473990dfed270fd74e1d0a04c678fd58fc35b1b2d3b61e72cfdb13fd\",\"dweb:/ipfs/QmcvbbHZxt9qa9aMncg5WXwWUabJk3gd5sj5zqJ7eZAeuv\"]},\"/home/grifma/Code/vi-admin-ui/contracts/lib/openzeppelin-solidity/contracts/mocks/ERC20SnapshotMock.sol\":{\"keccak256\":\"0x848d2d4d37da188c9bfcb5b1d4421adc72b467857876616d393dbbf79769663f\",\"urls\":[\"bzz-raw://7c9f8c4110be9c91d70cad7174d99eae255f3da6ea2592afce6b1d3c9c08aa08\",\"dweb:/ipfs/QmcazYFv9FD9hVCZ3k3bonuZNhch8LpyFTXxZXZGKfa1w7\"]},\"/home/grifma/Code/vi-admin-ui/contracts/lib/openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xb8a0f62c754f21107f0016cb05e1a3e4c9f8efdd7790cdda65e45974e7cdd05b\",\"urls\":[\"bzz-raw://40f87b0554a586daa6128b090188a740191a98c091924fe3e1fd282f2ec3b814\",\"dweb:/ipfs/QmXRJDJTu8ZxYH3n1ToQWx5JLn3PfgmNoWfVfEvC21WbLc\"]},\"/home/grifma/Code/vi-admin-ui/contracts/lib/openzeppelin-solidity/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x598d8fdca2e04f0834c0c6263d9b42d3e2a3de2a06ed973468ae51606ccf1974\",\"urls\":[\"bzz-raw://74dd963d7b7843e54a5f2cf628a041f346e84d03fe22e43a0bcfa69db9238a17\",\"dweb:/ipfs/QmXLqX82iknN34wL3znWjkATyJ4ReXimj7XDRmoAevXea7\"]},\"/home/grifma/Code/vi-admin-ui/contracts/lib/openzeppelin-solidity/contracts/utils/Arrays.sol\":{\"keccak256\":\"0xaa700747d1e348e60bd9de641f7702ab70fffbb94686d5ad441370b91b4e0b8b\",\"urls\":[\"bzz-raw://84db88bd5b29607e94e8c9f237b9da3101bcc158c315444e8be013bbfad57a31\",\"dweb:/ipfs/QmcwEavnLCKTDi9Skezs4SGXV4zLtANso3hQLspwQFjaeT\"]}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b506040516200106538038062001065833981810160405260408110156200003757600080fd5b5080516020909101516200005582826001600160e01b036200005d16565b50506200032c565b62000071826001600160e01b036200009f16565b620000846001600160e01b03620000e216565b6200009b8282620000fd60201b6200095a1760201c565b5050565b6001600160a01b0381166000908152600360205260409020620000df90620000d0836001600160e01b03620001fe16565b6001600160e01b036200021d16565b50565b620000fb6004620000d06001600160e01b036200028716565b565b6001600160a01b03821662000159576040805162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015290519081900360640190fd5b62000175816002546200028d60201b6200067a1790919060201c565b6002556001600160a01b03821660009081526020818152604090912054620001a89183906200067a6200028d821b17901c565b6001600160a01b0383166000818152602081815260408083209490945583518581529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35050565b6001600160a01b0381166000908152602081905260409020545b919050565b6000620002366006620002ef60201b620008021760201c565b9050806200024d846001600160e01b03620002f316565b101562000282578254600181810185556000858152602080822090930184905581860180549283018155815291909120018290555b505050565b60025490565b600082820183811015620002e8576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b9392505050565b5490565b8054600090620003065750600062000218565b8154829060001981019081106200031957fe5b9060005260206000200154905062000218565b610d29806200033c6000396000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c806370a082311161008c5780639dc29fac116100665780639dc29fac14610235578063a457c2d714610261578063a9059cbb1461028d578063dd62ed3e146102b9576100cf565b806370a08231146101ea5780639711715a14610210578063981b24d014610218576100cf565b8063095ea7b3146100d457806318160ddd1461011457806323b872dd1461012e578063395093511461016457806340c10f19146101905780634ee2cd7e146101be575b600080fd5b610100600480360360408110156100ea57600080fd5b506001600160a01b0381351690602001356102e7565b604080519115158252519081900360200190f35b61011c6102fe565b60408051918252519081900360200190f35b6101006004803603606081101561014457600080fd5b506001600160a01b03813581169160208101359091169060400135610304565b6101006004803603604081101561017a57600080fd5b506001600160a01b03813516906020013561035b565b6101bc600480360360408110156101a657600080fd5b506001600160a01b038135169060200135610397565b005b61011c600480360360408110156101d457600080fd5b506001600160a01b0381351690602001356103a5565b61011c6004803603602081101561020057600080fd5b50356001600160a01b03166103ee565b61011c61040d565b61011c6004803603602081101561022e57600080fd5b5035610461565b6101bc6004803603604081101561024b57600080fd5b506001600160a01b038135169060200135610491565b6101006004803603604081101561027757600080fd5b506001600160a01b03813516906020013561049b565b610100600480360360408110156102a357600080fd5b506001600160a01b0381351690602001356104d7565b61011c600480360360408110156102cf57600080fd5b506001600160a01b03813581169160200135166104e4565b60006102f433848461050f565b5060015b92915050565b60025490565b60006103118484846105fb565b6001600160a01b03841660009081526001602090815260408083203380855292529091205461035191869161034c908663ffffffff61061d16565b61050f565b5060019392505050565b3360008181526001602090815260408083206001600160a01b038716845290915281205490916102f491859061034c908663ffffffff61067a16565b6103a182826106db565b5050565b6001600160a01b0382166000908152600360205260408120819081906103cc9085906106f6565b91509150816103e3576103de856103ee565b6103e5565b805b95945050505050565b6001600160a01b0381166000908152602081905260409020545b919050565b600061041960066107f9565b60006104256006610802565b6040805182815290519192507f8030e83b04d87bef53480e26263266d6ca66863aa8506aca6f2559d18aa1cb67919081900360200190a1905090565b60008060006104718460046106f6565b9150915081610487576104826102fe565b610489565b805b949350505050565b6103a18282610806565b3360008181526001602090815260408083206001600160a01b038716845290915281205490916102f491859061034c908663ffffffff61061d16565b60006102f43384846105fb565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6001600160a01b0383166105545760405162461bcd60e51b8152600401808060200182810382526024815260200180610cd16024913960400191505060405180910390fd5b6001600160a01b0382166105995760405162461bcd60e51b8152600401808060200182810382526022815260200180610c8e6022913960400191505060405180910390fd5b6001600160a01b03808416600081815260016020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b61060483610821565b61060d82610821565b61061883838361084e565b505050565b600082821115610674576040805162461bcd60e51b815260206004820152601e60248201527f536166654d6174683a207375627472616374696f6e206f766572666c6f770000604482015290519081900360640190fd5b50900390565b6000828201838110156106d4576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b9392505050565b6106e482610821565b6106ec61094b565b6103a1828261095a565b60008060008411610747576040805162461bcd60e51b815260206004820152601660248201527504552433230536e617073686f743a20696420697320360541b604482015290519081900360640190fd5b6107516006610802565b8411156107a5576040805162461bcd60e51b815260206004820152601d60248201527f4552433230536e617073686f743a206e6f6e6578697374656e74206964000000604482015290519081900360640190fd5b60006107b7848663ffffffff610a4a16565b84549091508114156107d05750600091508190506107f2565b60018460010182815481106107e157fe5b906000526020600020015492509250505b9250929050565b80546001019055565b5490565b61080f82610821565b61081761094b565b6103a18282610aeb565b6001600160a01b038116600090815260036020526040902061084b90610846836103ee565b610bc4565b50565b6001600160a01b0382166108935760405162461bcd60e51b8152600401808060200182810382526023815260200180610c6b6023913960400191505060405180910390fd5b6001600160a01b0383166000908152602081905260409020546108bc908263ffffffff61061d16565b6001600160a01b0380851660009081526020819052604080822093909355908416815220546108f1908263ffffffff61067a16565b6001600160a01b038084166000818152602081815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b61095860046108466102fe565b565b6001600160a01b0382166109b5576040805162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015290519081900360640190fd5b6002546109c8908263ffffffff61067a16565b6002556001600160a01b0382166000908152602081905260409020546109f4908263ffffffff61067a16565b6001600160a01b0383166000818152602081815260408083209490945583518581529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35050565b8154600090610a5b575060006102f8565b82546000905b80821015610aaa576000610a758383610c10565b905084868281548110610a8457fe5b90600052602060002001541115610a9d57809150610aa4565b8060010192505b50610a61565b600082118015610ad2575083856001840381548110610ac557fe5b9060005260206000200154145b15610ae357506000190190506102f8565b5090506102f8565b6001600160a01b038216610b305760405162461bcd60e51b8152600401808060200182810382526021815260200180610cb06021913960400191505060405180910390fd5b600254610b43908263ffffffff61061d16565b6002556001600160a01b038216600090815260208190526040902054610b6f908263ffffffff61061d16565b6001600160a01b038316600081815260208181526040808320949094558351858152935191937fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef929081900390910190a35050565b6000610bd06006610802565b905080610bdc84610c35565b1015610618578254600180820185556000858152602080822090930193909355938401805494850181558252902090910155565b60006002808306600285060181610c2357fe5b04600283046002850401019392505050565b8054600090610c4657506000610408565b815482906000198101908110610c5857fe5b9060005260206000200154905061040856fe45524332303a207472616e7366657220746f20746865207a65726f206164647265737345524332303a20617070726f766520746f20746865207a65726f206164647265737345524332303a206275726e2066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373a265627a7a72315820edeb2eb1b46b3621d7fe9e609867c7debd5f9e136b0ab5f8bdcc1e0fccc8137164736f6c63430005100032",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100cf5760003560e01c806370a082311161008c5780639dc29fac116100665780639dc29fac14610235578063a457c2d714610261578063a9059cbb1461028d578063dd62ed3e146102b9576100cf565b806370a08231146101ea5780639711715a14610210578063981b24d014610218576100cf565b8063095ea7b3146100d457806318160ddd1461011457806323b872dd1461012e578063395093511461016457806340c10f19146101905780634ee2cd7e146101be575b600080fd5b610100600480360360408110156100ea57600080fd5b506001600160a01b0381351690602001356102e7565b604080519115158252519081900360200190f35b61011c6102fe565b60408051918252519081900360200190f35b6101006004803603606081101561014457600080fd5b506001600160a01b03813581169160208101359091169060400135610304565b6101006004803603604081101561017a57600080fd5b506001600160a01b03813516906020013561035b565b6101bc600480360360408110156101a657600080fd5b506001600160a01b038135169060200135610397565b005b61011c600480360360408110156101d457600080fd5b506001600160a01b0381351690602001356103a5565b61011c6004803603602081101561020057600080fd5b50356001600160a01b03166103ee565b61011c61040d565b61011c6004803603602081101561022e57600080fd5b5035610461565b6101bc6004803603604081101561024b57600080fd5b506001600160a01b038135169060200135610491565b6101006004803603604081101561027757600080fd5b506001600160a01b03813516906020013561049b565b610100600480360360408110156102a357600080fd5b506001600160a01b0381351690602001356104d7565b61011c600480360360408110156102cf57600080fd5b506001600160a01b03813581169160200135166104e4565b60006102f433848461050f565b5060015b92915050565b60025490565b60006103118484846105fb565b6001600160a01b03841660009081526001602090815260408083203380855292529091205461035191869161034c908663ffffffff61061d16565b61050f565b5060019392505050565b3360008181526001602090815260408083206001600160a01b038716845290915281205490916102f491859061034c908663ffffffff61067a16565b6103a182826106db565b5050565b6001600160a01b0382166000908152600360205260408120819081906103cc9085906106f6565b91509150816103e3576103de856103ee565b6103e5565b805b95945050505050565b6001600160a01b0381166000908152602081905260409020545b919050565b600061041960066107f9565b60006104256006610802565b6040805182815290519192507f8030e83b04d87bef53480e26263266d6ca66863aa8506aca6f2559d18aa1cb67919081900360200190a1905090565b60008060006104718460046106f6565b9150915081610487576104826102fe565b610489565b805b949350505050565b6103a18282610806565b3360008181526001602090815260408083206001600160a01b038716845290915281205490916102f491859061034c908663ffffffff61061d16565b60006102f43384846105fb565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6001600160a01b0383166105545760405162461bcd60e51b8152600401808060200182810382526024815260200180610cd16024913960400191505060405180910390fd5b6001600160a01b0382166105995760405162461bcd60e51b8152600401808060200182810382526022815260200180610c8e6022913960400191505060405180910390fd5b6001600160a01b03808416600081815260016020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b61060483610821565b61060d82610821565b61061883838361084e565b505050565b600082821115610674576040805162461bcd60e51b815260206004820152601e60248201527f536166654d6174683a207375627472616374696f6e206f766572666c6f770000604482015290519081900360640190fd5b50900390565b6000828201838110156106d4576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b9392505050565b6106e482610821565b6106ec61094b565b6103a1828261095a565b60008060008411610747576040805162461bcd60e51b815260206004820152601660248201527504552433230536e617073686f743a20696420697320360541b604482015290519081900360640190fd5b6107516006610802565b8411156107a5576040805162461bcd60e51b815260206004820152601d60248201527f4552433230536e617073686f743a206e6f6e6578697374656e74206964000000604482015290519081900360640190fd5b60006107b7848663ffffffff610a4a16565b84549091508114156107d05750600091508190506107f2565b60018460010182815481106107e157fe5b906000526020600020015492509250505b9250929050565b80546001019055565b5490565b61080f82610821565b61081761094b565b6103a18282610aeb565b6001600160a01b038116600090815260036020526040902061084b90610846836103ee565b610bc4565b50565b6001600160a01b0382166108935760405162461bcd60e51b8152600401808060200182810382526023815260200180610c6b6023913960400191505060405180910390fd5b6001600160a01b0383166000908152602081905260409020546108bc908263ffffffff61061d16565b6001600160a01b0380851660009081526020819052604080822093909355908416815220546108f1908263ffffffff61067a16565b6001600160a01b038084166000818152602081815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b61095860046108466102fe565b565b6001600160a01b0382166109b5576040805162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015290519081900360640190fd5b6002546109c8908263ffffffff61067a16565b6002556001600160a01b0382166000908152602081905260409020546109f4908263ffffffff61067a16565b6001600160a01b0383166000818152602081815260408083209490945583518581529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35050565b8154600090610a5b575060006102f8565b82546000905b80821015610aaa576000610a758383610c10565b905084868281548110610a8457fe5b90600052602060002001541115610a9d57809150610aa4565b8060010192505b50610a61565b600082118015610ad2575083856001840381548110610ac557fe5b9060005260206000200154145b15610ae357506000190190506102f8565b5090506102f8565b6001600160a01b038216610b305760405162461bcd60e51b8152600401808060200182810382526021815260200180610cb06021913960400191505060405180910390fd5b600254610b43908263ffffffff61061d16565b6002556001600160a01b038216600090815260208190526040902054610b6f908263ffffffff61061d16565b6001600160a01b038316600081815260208181526040808320949094558351858152935191937fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef929081900390910190a35050565b6000610bd06006610802565b905080610bdc84610c35565b1015610618578254600180820185556000858152602080822090930193909355938401805494850181558252902090910155565b60006002808306600285060181610c2357fe5b04600283046002850401019392505050565b8054600090610c4657506000610408565b815482906000198101908110610c5857fe5b9060005260206000200154905061040856fe45524332303a207472616e7366657220746f20746865207a65726f206164647265737345524332303a20617070726f766520746f20746865207a65726f206164647265737345524332303a206275726e2066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373a265627a7a72315820edeb2eb1b46b3621d7fe9e609867c7debd5f9e136b0ab5f8bdcc1e0fccc8137164736f6c63430005100032",
  "sourceMap": "65:371:72:-;;;115:121;8:9:-1;5:2;;;30:1;27;20:12;5:2;115:121:72;;;;;;;;;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;115:121:72;;;;;;;192:37;115:121;;-1:-1:-1;;;;;192:5:72;:37;:::i;:::-;115:121;;65:371;;3158:180:34;3224:31;3247:7;-1:-1:-1;;;;;3224:22:34;:31;:::i;:::-;3265:28;-1:-1:-1;;;;;3265:26:34;:28;:::i;:::-;3304:27;3316:7;3325:5;3304:11;;;;;:27;;:::i;:::-;3158:180;;:::o;5147:144::-;-1:-1:-1;;;;;5230:33:34;;;;;;:24;:33;;;;;5214:70;;5265:18;5255:7;-1:-1:-1;;;;;5265:9:34;:18;:::i;:::-;-1:-1:-1;;;;;5214:15:34;:70;:::i;:::-;5147:144;:::o;5297:116::-;5353:53;5369:21;5392:13;-1:-1:-1;;;;;5392:11:34;:13;:::i;5353:53::-;5297:116::o;5832:298:116:-;-1:-1:-1;;;;;5906:21:116;;5898:65;;;;;-1:-1:-1;;;5898:65:116;;;;;;;;;;;;;;;;;;;;;;;;;;;;5989:23;6006:5;5989:12;;:16;;;;;;:23;;;;:::i;:::-;5974:12;:38;-1:-1:-1;;;;;6043:18:116;;:9;:18;;;;;;;;;;;;:29;;6066:5;;6043:22;;;;;:29;;:::i;:::-;-1:-1:-1;;;;;6022:18:116;;:9;:18;;;;;;;;;;;:50;;;;6087:36;;;;;;;6022:18;;:9;;6087:36;;;;;;;;;;5832:298;;:::o;1194:104::-;-1:-1:-1;;;;;1275:16:116;;1249:7;1275:16;;;;;;;;;;;1194:104;;;;:::o;5419:309:34:-;5513:17;5533:28;:18;:26;;;;;:28;;:::i;:::-;5513:48;-1:-1:-1;5513:48:34;5575:30;5591:9;-1:-1:-1;;;;;5575:15:34;:30;:::i;:::-;:42;5571:151;;;27:10:-1;;39:1;23:18;;;45:23;;5633:13:34;:29;;;;;;;;;;;;;5676:16;;;27:10:-1;;23:18;;;45:23;;5676:35:34;;;;;;;;;;5571:151;5419:309;;;:::o;893:89:116:-;963:12;;893:89;:::o;1541:176:51:-;1599:7;1630:5;;;1653:6;;;;1645:46;;;;;-1:-1:-1;;;1645:46:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;1709:1;1541:176;-1:-1:-1;;;1541:176:51:o;1063:112:30:-;1154:14;;1063:112::o;5734:206:34:-;5827:10;;5804:7;;5823:111;;-1:-1:-1;5865:1:34;5858:8;;5823:111;5908:10;;5904:3;;-1:-1:-1;;5908:14:34;;;5904:19;;;;;;;;;;;;;;5897:26;;;;65:371:72;;;;;;;",
  "deployedSourceMap": "65:371:72:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;65:371:72;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2699:145:116;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;2699:145:116;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;893:89;;;:::i;:::-;;;;;;;;;;;;;;;;3307:224;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;3307:224:116;;;;;;;;;;;;;;;;;:::i;4045:200::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;4045:200:116;;;;;;;;:::i;242:93:72:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;242:93:72;;;;;;;;:::i;:::-;;2175:254:34;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;2175:254:34;;;;;;;;:::i;1194:104:116:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1194:104:116;-1:-1:-1;;;;;1194:104:116;;:::i;1958:211:34:-;;;:::i;2435:221::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2435:221:34;;:::i;341:93:72:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;341:93:72;;;;;;;;:::i;4764:210:116:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;4764:210:116;;;;;;;;:::i;1926:137::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;1926:137:116;;;;;;;;:::i;1629:129::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;1629:129:116;;;;;;;;;;:::i;2699:145::-;2764:4;2780:36;2789:10;2801:7;2810:5;2780:8;:36::i;:::-;-1:-1:-1;2833:4:116;2699:145;;;;;:::o;893:89::-;963:12;;893:89;:::o;3307:224::-;3386:4;3402:26;3412:4;3418:2;3422:5;3402:9;:26::i;:::-;-1:-1:-1;;;;;3465:14:116;;;;;;:8;:14;;;;;;;;3453:10;3465:26;;;;;;;;;3438:65;;3447:4;;3465:37;;3496:5;3465:37;:30;:37;:::i;:::-;3438:8;:65::i;:::-;-1:-1:-1;3520:4:116;3307:224;;;;;:::o;4045:200::-;4150:10;4125:4;4171:20;;;:8;:20;;;;;;;;-1:-1:-1;;;;;4171:29:116;;;;;;;;;;4125:4;;4141:76;;4162:7;;4171:45;;4205:10;4171:45;:33;:45;:::i;242:93:72:-;306:22;312:7;321:6;306:5;:22::i;:::-;242:93;;:::o;2175:254:34:-;-1:-1:-1;;;;;2330:33:34;;2254:7;2330:33;;;:24;:33;;;;;2254:7;;;;2309:55;;2318:10;;2309:8;:55::i;:::-;2273:91;;;;2382:11;:40;;2404:18;2414:7;2404:9;:18::i;:::-;2382:40;;;2396:5;2382:40;2375:47;2175:254;-1:-1:-1;;;;;2175:254:34:o;1194:104:116:-;-1:-1:-1;;;;;1275:16:116;;1249:7;1275:16;;;;;;;;;;;1194:104;;;;:::o;1958:211:34:-;1994:7;2013:30;:18;:28;:30::i;:::-;2054:17;2074:28;:18;:26;:28::i;:::-;2117:19;;;;;;;;2054:48;;-1:-1:-1;2117:19:34;;;;;;;;;;2153:9;-1:-1:-1;1958:211:34;:::o;2435:221::-;2498:7;2518:16;2536:13;2553:43;2562:10;2574:21;2553:8;:43::i;:::-;2517:79;;;;2614:11;:35;;2636:13;:11;:13::i;:::-;2614:35;;;2628:5;2614:35;2607:42;2435:221;-1:-1:-1;;;;2435:221:34:o;341:93:72:-;405:22;411:7;420:6;405:5;:22::i;4764:210:116:-;4874:10;4849:4;4895:20;;;:8;:20;;;;;;;;-1:-1:-1;;;;;4895:29:116;;;;;;;;;;4849:4;;4865:81;;4886:7;;4895:50;;4929:15;4895:50;:33;:50;:::i;1926:137::-;1987:4;2003:32;2013:10;2025:2;2029:5;2003:9;:32::i;1629:129::-;-1:-1:-1;;;;;1727:15:116;;;1701:7;1727:15;;;:8;:15;;;;;;;;:24;;;;;;;;;;;;;1629:129::o;6921:326::-;-1:-1:-1;;;;;7013:19:116;;7005:68;;;;-1:-1:-1;;;7005:68:116;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;7091:21:116;;7083:68;;;;-1:-1:-1;;;7083:68:116;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;7162:15:116;;;;;;;:8;:15;;;;;;;;:24;;;;;;;;;;;;;:32;;;7209:31;;;;;;;;;;;;;;;;;6921:326;;;:::o;2959:193:34:-;3038:28;3061:4;3038:22;:28::i;:::-;3076:26;3099:2;3076:22;:26::i;:::-;3113:32;3129:4;3135:2;3139:5;3113:15;:32::i;:::-;2959:193;;;:::o;1279:179:51:-;1337:7;1369:1;1364;:6;;1356:49;;;;;-1:-1:-1;;;1356:49:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1427:5:51;;;1279:179::o;1541:176::-;1599:7;1630:5;;;1653:6;;;;1645:46;;;;;-1:-1:-1;;;1645:46:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;1709:1;1541:176;-1:-1:-1;;;1541:176:51:o;3158:180:34:-;3224:31;3247:7;3224:22;:31::i;:::-;3265:28;:26;:28::i;:::-;3304:27;3316:7;3325:5;3304:11;:27::i;4589:552::-;4686:4;4692:7;4736:1;4723:10;:14;4715:49;;;;;-1:-1:-1;;;4715:49:34;;;;;;;;;;;;-1:-1:-1;;;4715:49:34;;;;;;;;;;;;;;;4849:28;:18;:26;:28::i;:::-;4835:10;:42;;4827:84;;;;;-1:-1:-1;;;4827:84:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;4922:13;4938:40;:9;4967:10;4938:40;:28;:40;:::i;:::-;5002:20;;4922:56;;-1:-1:-1;4993:29:34;;4989:146;;;-1:-1:-1;5046:5:34;;-1:-1:-1;5046:5:34;;-1:-1:-1;5038:17:34;;4989:146;5094:4;5100:9;:16;;5117:5;5100:23;;;;;;;;;;;;;;;;5086:38;;;;;4589:552;;;;;;:::o;1181:89:30:-;1244:19;;1262:1;1244:19;;;1181:89::o;1063:112::-;1154:14;;1063:112::o;3344:180:34:-;3410:31;3433:7;3410:22;:31::i;:::-;3451:28;:26;:28::i;:::-;3490:27;3502:7;3511:5;3490:11;:27::i;5147:144::-;-1:-1:-1;;;;;5230:33:34;;;;;;:24;:33;;;;;5214:70;;5265:18;5255:7;5265:9;:18::i;:::-;5214:15;:70::i;:::-;5147:144;:::o;5194:295:116:-;-1:-1:-1;;;;;5281:16:116;;5273:64;;;;-1:-1:-1;;;5273:64:116;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5366:15:116;;:9;:15;;;;;;;;;;;:26;;5386:5;5366:26;:19;:26;:::i;:::-;-1:-1:-1;;;;;5348:15:116;;;:9;:15;;;;;;;;;;;:44;;;;5418:13;;;;;;;:24;;5436:5;5418:24;:17;:24;:::i;:::-;-1:-1:-1;;;;;5402:13:116;;;:9;:13;;;;;;;;;;;;:40;;;;5457:25;;;;;;;5402:13;;5457:25;;;;;;;;;;;;;5194:295;;;:::o;5297:116:34:-;5353:53;5369:21;5392:13;:11;:13::i;5353:53::-;5297:116::o;5832:298:116:-;-1:-1:-1;;;;;5906:21:116;;5898:65;;;;;-1:-1:-1;;;5898:65:116;;;;;;;;;;;;;;;;;;;;;;;;;;;;5989:12;;:23;;6006:5;5989:23;:16;:23;:::i;:::-;5974:12;:38;-1:-1:-1;;;;;6043:18:116;;:9;:18;;;;;;;;;;;:29;;6066:5;6043:29;:22;:29;:::i;:::-;-1:-1:-1;;;;;6022:18:116;;:9;:18;;;;;;;;;;;:50;;;;6087:36;;;;;;;6022:18;;:9;;6087:36;;;;;;;;;;5832:298;;:::o;835:892:140:-;947:12;;924:7;;943:56;;-1:-1:-1;987:1:140;980:8;;943:56;1049:12;;1009:11;;1072:414;1085:4;1079:3;:10;1072:414;;;1105:11;1119:23;1132:3;1137:4;1119:12;:23::i;:::-;1105:37;;1372:7;1359:5;1365:3;1359:10;;;;;;;;;;;;;;;;:20;1355:121;;;1406:3;1399:10;;1355:121;;;1454:3;1460:1;1454:7;1448:13;;1355:121;1072:414;;;;1609:1;1603:3;:7;:36;;;;;1632:7;1614:5;1626:1;1620:3;:7;1614:14;;;;;;;;;;;;;;;;:25;1603:36;1599:122;;;-1:-1:-1;;;1662:7:140;;-1:-1:-1;1655:14:140;;1599:122;-1:-1:-1;1707:3:140;-1:-1:-1;1700:10:140;;6356:300:116;-1:-1:-1;;;;;6430:21:116;;6422:67;;;;-1:-1:-1;;;6422:67:116;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6515:12;;:23;;6532:5;6515:23;:16;:23;:::i;:::-;6500:12;:38;-1:-1:-1;;;;;6569:18:116;;:9;:18;;;;;;;;;;;:29;;6592:5;6569:29;:22;:29;:::i;:::-;-1:-1:-1;;;;;6548:18:116;;:9;:18;;;;;;;;;;;:50;;;;6613:36;;;;;;;6548:9;;6613:36;;;;;;;;;;;6356:300;;:::o;5419:309:34:-;5513:17;5533:28;:18;:26;:28::i;:::-;5513:48;-1:-1:-1;5513:48:34;5575:30;5591:9;5575:15;:30::i;:::-;:42;5571:151;;;27:10:-1;;39:1;23:18;;;45:23;;-1:-1;5633:29:34;;;;;;;;;;;;;;5676:16;;;27:10:-1;;23:18;;;45:23;;5676:35:34;;;;;;;;5419:309::o;642:190:50:-;704:7;823:1;;814;:5;810:1;806;:5;:13;805:19;;;;;;799:1;795;:5;789:1;785;:5;784:17;:41;;642:190;-1:-1:-1;;;642:190:50:o;5734:206:34:-;5827:10;;5804:7;;5823:111;;-1:-1:-1;5865:1:34;5858:8;;5823:111;5908:10;;5904:3;;-1:-1:-1;;5908:14:34;;;5904:19;;;;;;;;;;;;;;5897:26;;;",
  "source": "pragma solidity ^0.5.0;\n\nimport \"../drafts/ERC20Snapshot.sol\";\n\n\ncontract ERC20SnapshotMock is ERC20Snapshot {\n    constructor(address initialAccount, uint256 initialBalance) public {\n        _mint(initialAccount, initialBalance);\n    }\n\n    function mint(address account, uint256 amount) public {\n        _mint(account, amount);\n    }\n\n    function burn(address account, uint256 amount) public {\n        _burn(account, amount);\n    }\n}\n",
  "sourcePath": "/home/grifma/Code/vi-admin-ui/contracts/lib/openzeppelin-solidity/contracts/mocks/ERC20SnapshotMock.sol",
  "ast": {
    "absolutePath": "/home/grifma/Code/vi-admin-ui/contracts/lib/openzeppelin-solidity/contracts/mocks/ERC20SnapshotMock.sol",
    "exportedSymbols": {
      "ERC20SnapshotMock": [
        7749
      ]
    },
    "id": 7750,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 7706,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:72"
      },
      {
        "absolutePath": "/home/grifma/Code/vi-admin-ui/contracts/lib/openzeppelin-solidity/contracts/drafts/ERC20Snapshot.sol",
        "file": "../drafts/ERC20Snapshot.sol",
        "id": 7707,
        "nodeType": "ImportDirective",
        "scope": 7750,
        "sourceUnit": 4759,
        "src": "25:37:72",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 7708,
              "name": "ERC20Snapshot",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 4758,
              "src": "95:13:72",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20Snapshot_$4758",
                "typeString": "contract ERC20Snapshot"
              }
            },
            "id": 7709,
            "nodeType": "InheritanceSpecifier",
            "src": "95:13:72"
          }
        ],
        "contractDependencies": [
          4758,
          11017,
          11364
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 7749,
        "linearizedBaseContracts": [
          7749,
          4758,
          11017,
          11364
        ],
        "name": "ERC20SnapshotMock",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 7721,
              "nodeType": "Block",
              "src": "182:54:72",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 7717,
                        "name": "initialAccount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7711,
                        "src": "198:14:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 7718,
                        "name": "initialBalance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7713,
                        "src": "214:14:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 7716,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4592
                      ],
                      "referencedDeclaration": 4592,
                      "src": "192:5:72",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 7719,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "192:37:72",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7720,
                  "nodeType": "ExpressionStatement",
                  "src": "192:37:72"
                }
              ]
            },
            "documentation": null,
            "id": 7722,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7714,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7711,
                  "name": "initialAccount",
                  "nodeType": "VariableDeclaration",
                  "scope": 7722,
                  "src": "127:22:72",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7710,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "127:7:72",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7713,
                  "name": "initialBalance",
                  "nodeType": "VariableDeclaration",
                  "scope": 7722,
                  "src": "151:22:72",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7712,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "151:7:72",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "126:48:72"
            },
            "returnParameters": {
              "id": 7715,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "182:0:72"
            },
            "scope": 7749,
            "src": "115:121:72",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 7734,
              "nodeType": "Block",
              "src": "296:39:72",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 7730,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7724,
                        "src": "312:7:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 7731,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7726,
                        "src": "321:6:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 7729,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4592
                      ],
                      "referencedDeclaration": 4592,
                      "src": "306:5:72",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 7732,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "306:22:72",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7733,
                  "nodeType": "ExpressionStatement",
                  "src": "306:22:72"
                }
              ]
            },
            "documentation": null,
            "id": 7735,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mint",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7727,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7724,
                  "name": "account",
                  "nodeType": "VariableDeclaration",
                  "scope": 7735,
                  "src": "256:15:72",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7723,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "256:7:72",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7726,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 7735,
                  "src": "273:14:72",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7725,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "273:7:72",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "255:33:72"
            },
            "returnParameters": {
              "id": 7728,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "296:0:72"
            },
            "scope": 7749,
            "src": "242:93:72",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 7747,
              "nodeType": "Block",
              "src": "395:39:72",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 7743,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7737,
                        "src": "411:7:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 7744,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7739,
                        "src": "420:6:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 7742,
                      "name": "_burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4614
                      ],
                      "referencedDeclaration": 4614,
                      "src": "405:5:72",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 7745,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "405:22:72",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7746,
                  "nodeType": "ExpressionStatement",
                  "src": "405:22:72"
                }
              ]
            },
            "documentation": null,
            "id": 7748,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "burn",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7740,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7737,
                  "name": "account",
                  "nodeType": "VariableDeclaration",
                  "scope": 7748,
                  "src": "355:15:72",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7736,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "355:7:72",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7739,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 7748,
                  "src": "372:14:72",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7738,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "372:7:72",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "354:33:72"
            },
            "returnParameters": {
              "id": 7741,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "395:0:72"
            },
            "scope": 7749,
            "src": "341:93:72",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 7750,
        "src": "65:371:72"
      }
    ],
    "src": "0:437:72"
  },
  "legacyAST": {
    "absolutePath": "/home/grifma/Code/vi-admin-ui/contracts/lib/openzeppelin-solidity/contracts/mocks/ERC20SnapshotMock.sol",
    "exportedSymbols": {
      "ERC20SnapshotMock": [
        7749
      ]
    },
    "id": 7750,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 7706,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:72"
      },
      {
        "absolutePath": "/home/grifma/Code/vi-admin-ui/contracts/lib/openzeppelin-solidity/contracts/drafts/ERC20Snapshot.sol",
        "file": "../drafts/ERC20Snapshot.sol",
        "id": 7707,
        "nodeType": "ImportDirective",
        "scope": 7750,
        "sourceUnit": 4759,
        "src": "25:37:72",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 7708,
              "name": "ERC20Snapshot",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 4758,
              "src": "95:13:72",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20Snapshot_$4758",
                "typeString": "contract ERC20Snapshot"
              }
            },
            "id": 7709,
            "nodeType": "InheritanceSpecifier",
            "src": "95:13:72"
          }
        ],
        "contractDependencies": [
          4758,
          11017,
          11364
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 7749,
        "linearizedBaseContracts": [
          7749,
          4758,
          11017,
          11364
        ],
        "name": "ERC20SnapshotMock",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 7721,
              "nodeType": "Block",
              "src": "182:54:72",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 7717,
                        "name": "initialAccount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7711,
                        "src": "198:14:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 7718,
                        "name": "initialBalance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7713,
                        "src": "214:14:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 7716,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4592
                      ],
                      "referencedDeclaration": 4592,
                      "src": "192:5:72",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 7719,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "192:37:72",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7720,
                  "nodeType": "ExpressionStatement",
                  "src": "192:37:72"
                }
              ]
            },
            "documentation": null,
            "id": 7722,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7714,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7711,
                  "name": "initialAccount",
                  "nodeType": "VariableDeclaration",
                  "scope": 7722,
                  "src": "127:22:72",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7710,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "127:7:72",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7713,
                  "name": "initialBalance",
                  "nodeType": "VariableDeclaration",
                  "scope": 7722,
                  "src": "151:22:72",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7712,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "151:7:72",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "126:48:72"
            },
            "returnParameters": {
              "id": 7715,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "182:0:72"
            },
            "scope": 7749,
            "src": "115:121:72",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 7734,
              "nodeType": "Block",
              "src": "296:39:72",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 7730,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7724,
                        "src": "312:7:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 7731,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7726,
                        "src": "321:6:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 7729,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4592
                      ],
                      "referencedDeclaration": 4592,
                      "src": "306:5:72",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 7732,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "306:22:72",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7733,
                  "nodeType": "ExpressionStatement",
                  "src": "306:22:72"
                }
              ]
            },
            "documentation": null,
            "id": 7735,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mint",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7727,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7724,
                  "name": "account",
                  "nodeType": "VariableDeclaration",
                  "scope": 7735,
                  "src": "256:15:72",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7723,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "256:7:72",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7726,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 7735,
                  "src": "273:14:72",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7725,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "273:7:72",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "255:33:72"
            },
            "returnParameters": {
              "id": 7728,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "296:0:72"
            },
            "scope": 7749,
            "src": "242:93:72",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 7747,
              "nodeType": "Block",
              "src": "395:39:72",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 7743,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7737,
                        "src": "411:7:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 7744,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7739,
                        "src": "420:6:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 7742,
                      "name": "_burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4614
                      ],
                      "referencedDeclaration": 4614,
                      "src": "405:5:72",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 7745,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "405:22:72",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7746,
                  "nodeType": "ExpressionStatement",
                  "src": "405:22:72"
                }
              ]
            },
            "documentation": null,
            "id": 7748,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "burn",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7740,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7737,
                  "name": "account",
                  "nodeType": "VariableDeclaration",
                  "scope": 7748,
                  "src": "355:15:72",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7736,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "355:7:72",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7739,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 7748,
                  "src": "372:14:72",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7738,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "372:7:72",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "354:33:72"
            },
            "returnParameters": {
              "id": 7741,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "395:0:72"
            },
            "scope": 7749,
            "src": "341:93:72",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 7750,
        "src": "65:371:72"
      }
    ],
    "src": "0:437:72"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.16+commit.9c3226ce.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.23",
  "updatedAt": "2020-05-14T20:26:11.275Z",
  "devdoc": {
    "methods": {
      "allowance(address,address)": {
        "details": "Function to check the amount of tokens that an owner allowed to a spender.",
        "params": {
          "owner": "address The address which owns the funds.",
          "spender": "address The address which will spend the funds."
        },
        "return": "A uint256 specifying the amount of tokens still available for the spender."
      },
      "approve(address,uint256)": {
        "details": "Approve the passed address to spend the specified amount of tokens on behalf of msg.sender. Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729",
        "params": {
          "spender": "The address which will spend the funds.",
          "value": "The amount of tokens to be spent."
        }
      },
      "balanceOf(address)": {
        "details": "Gets the balance of the specified address.",
        "params": {
          "owner": "The address to query the balance of."
        },
        "return": "A uint256 representing the amount owned by the passed address."
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Decrease the amount of tokens that an owner allowed to a spender. approve should be called when _allowed[msg.sender][spender] == 0. To decrement allowed value is better to use this function to avoid 2 calls (and wait until the first transaction is mined) From MonolithDAO Token.sol Emits an Approval event.",
        "params": {
          "spender": "The address which will spend the funds.",
          "subtractedValue": "The amount of tokens to decrease the allowance by."
        }
      },
      "increaseAllowance(address,uint256)": {
        "details": "Increase the amount of tokens that an owner allowed to a spender. approve should be called when _allowed[msg.sender][spender] == 0. To increment allowed value is better to use this function to avoid 2 calls (and wait until the first transaction is mined) From MonolithDAO Token.sol Emits an Approval event.",
        "params": {
          "addedValue": "The amount of tokens to increase the allowance by.",
          "spender": "The address which will spend the funds."
        }
      },
      "totalSupply()": {
        "details": "Total number of tokens in existence."
      },
      "transfer(address,uint256)": {
        "details": "Transfer token to a specified address.",
        "params": {
          "to": "The address to transfer to.",
          "value": "The amount to be transferred."
        }
      },
      "transferFrom(address,address,uint256)": {
        "details": "Transfer tokens from one address to another. Note that while this function emits an Approval event, this is not required as per the specification, and other compliant implementations may not emit the event.",
        "params": {
          "from": "address The address which you want to send tokens from",
          "to": "address The address which you want to transfer to",
          "value": "uint256 the amount of tokens to be transferred"
        }
      }
    }
  },
  "userdoc": {
    "methods": {}
  }
}